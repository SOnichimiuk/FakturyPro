<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:con="clr-namespace:FakturyPro.Konwertery">
    
    <con:ListWidthConverter x:Key="ListWidthConverter" />
    <con:AmountToBackgroundConverter x:Key="AmountToBackgroundConverter"
    DefaultBrush="{x:Null}" HighlightBrush="Crimson" />
    
    <Style x:Key="UpperBoxesStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="Margin" Value="0,5,0,10" />
    </Style>
    
    <Style x:Key="UpperBoxBorder" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="Padding" Value="5,3,10,5" />
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>
    
    <Style x:Key="SearchBoxBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource UpperBoxBorder}">
        <Setter Property="BorderBrush" Value="DarkGreen" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.35,0" EndPoint="0.65,1">
                    <GradientStop Color="#FF4EE100" Offset="1" />
                    <GradientStop Color="#FF7DF000" Offset="0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GroupBoxBorder" TargetType="{x:Type Border}" BasedOn="{StaticResource UpperBoxBorder}">
        <Setter Property="BorderBrush" Value="#FFAE8B00" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.35,0" EndPoint="0.65,1">
                    <GradientStop Color="#FFFFDE00" Offset="1" />
                    <GradientStop Color="#FFFFF400" Offset="0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ArrowPolygon" TargetType="{x:Type Polygon}">
        <Setter Property="Stroke" Value="White" />
        <Setter Property="StrokeThickness" Value="0.1" />
        <Setter Property="Points" Value="0,0.46 1.36,0.46 1.36,0 2.98,1.13 1.36,2.26 1.36,1.8 0,1.8" />
    </Style>
    
    <Style x:Key="BlueArrowButton" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0.2,1">
                    <GradientStop Color="#FF2AD4FF" Offset="0" />
                    <GradientStop Color="#FF00C3F4" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Polygon Style="{StaticResource ArrowPolygon}" Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="10" ScaleX="10" CenterX="0.9" CenterY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0.2,1">
                            <GradientStop Color="#FFCECECE" Offset="0" />
                            <GradientStop Color="#FFC1C1C1" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BlueArrowReverseButton" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="0.8,1">
                    <GradientStop Color="#FF2AD4FF" Offset="0" />
                    <GradientStop Color="#FF00C3F4" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Polygon Style="{StaticResource ArrowPolygon}" Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="10" ScaleX="-10" CenterX="1.7" CenterY="1" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="1,0" EndPoint="0.8,1">
                            <GradientStop Color="#FFCECECE" Offset="0" />
                            <GradientStop Color="#FFC1C1C1" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="16,0,0,0" />
    </Style>
    
    <DataTemplate x:Key="StoredProductTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12" HorizontalAlignment="Left"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                Path=ActualWidth, Converter={StaticResource ListWidthConverter}, ConverterParameter=44}">
            <StackPanel>
                <TextBlock FontFamily="Calibri" FontSize="15" LineHeight="21" FontWeight="Bold" Text="{Binding Path=Name}"
                HorizontalAlignment="Left" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Stan: " />
                        <TextBlock Text="{Binding Path=Quantity}" Background="{Binding Path=Quantity, Converter={StaticResource AmountToBackgroundConverter}}" />
                        <TextBlock Text=" szt" />
                    </StackPanel>
                    
                    <TextBlock Grid.Column="1" Text="{Binding Path=PriceNetto, StringFormat=N2}"/>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="EditableProductTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12" HorizontalAlignment="Left"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                Path=ActualWidth, Converter={StaticResource ListWidthConverter}, ConverterParameter=44}">
            <StackPanel>
                <TextBlock FontFamily="Calibri" FontSize="15" LineHeight="21" FontWeight="Bold" Text="{Binding Path=Name}"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Ilość:" />
                        <TextBox Width="30" TextAlignment="Right" Text="{Binding Path=Quansity, ValidatesOnDataErrors=True}" Margin="6,0"/>
                        <TextBlock Text="szt" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <TextBlock Text="Cena" />
                        <TextBox Width="60" TextAlignment="Right" Text="{Binding Path=BruttoPrice, ValidatesOnDataErrors=True, StringFormat=N2}" Margin="6,0" />
                        <TextBlock Text="zł" />
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="DocumentTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12">
            <StackPanel>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{Binding }" />
                    <TextBlock Grid.Column="1">FV/2683/2012</TextBlock>
                </Grid>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock>22-10-2012</TextBlock>
                    <TextBlock Grid.Column="1">Netto: 227,21 zł</TextBlock>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="CustomerTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12" HorizontalAlignment="Left"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                Path=ActualWidth, Converter={StaticResource ListWidthConverter}, ConverterParameter=44}">
            <StackPanel>
                <TextBlock FontSize="13" LineHeight="18" FontWeight="Bold" Text="{Binding Path=Nazwa}"
                HorizontalAlignment="Left" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="NIP " />
                        <TextBlock Text="{Binding Path=NIP}" />
                    </StackPanel>

                    <TextBlock Grid.Column="1" Text="{Binding Path=Telefon}"/>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="ReadOnlyProductsTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12" HorizontalAlignment="Left"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                Path=ActualWidth, Converter={StaticResource ListWidthConverter}, ConverterParameter=44}">
            <StackPanel>
                <TextBlock FontSize="13" LineHeight="18" FontWeight="Bold" Text="{Binding Path=Nazwa}"
                HorizontalAlignment="Left" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="AmountSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="UnitSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="TimesSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="PriceSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="PriceCurrencySizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="EqualsSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ValueSizeGroup" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="ValueCurrencySizeGroup" />
                    </Grid.ColumnDefinitions>

                    <Grid.Resources>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="TextAlignment" Value="Right"/>
                            <Setter Property="Margin" Value="0,0,5,0"/>
                        </Style>
                    </Grid.Resources>

                    <TextBlock Text="{Binding Path=Ilosc}" />
                    <TextBlock Grid.Column="1" Text="{Binding Path=Jednostka}" />
                    <TextBlock Grid.Column="2" Text="x" />
                    <TextBlock Grid.Column="3" Text="{Binding Path=CenaBrutto, StringFormat=N2}" />
                    <TextBlock Grid.Column="4" Text="zł" />
                    <TextBlock Grid.Column="5" Text="=" />
                    <TextBlock Grid.Column="6" Text="{Binding Path=WartoscBrutto, StringFormat=N2}" />
                    <TextBlock Grid.Column="7" Text="zł" />
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>
    
    <DataTemplate x:Key="DocumentsListBoxItemTemplate">
        <Border BorderBrush="LightGray" BorderThickness="0,0,0,0.5" Padding="0,12" HorizontalAlignment="Left"
                Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}},
                Path=ActualWidth, Converter={StaticResource ListWidthConverter}, ConverterParameter=44}">
            <StackPanel>
                <TextBlock FontSize="13" LineHeight="18" FontWeight="Bold" Text="{Binding Path=ClientName}"
                HorizontalAlignment="Left" />
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Path=DocumentNr}" />
                        <TextBlock Text="," Margin="0,0,6,0"/>
                        <TextBlock Text="{Binding Path=CreationDate, StringFormat=d}" />
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <TextBlock Grid.Column="1" Text="{Binding Path=PriceGross, StringFormat=N2}" />
                        <TextBlock Text="zł" Margin="5,0,0,0"/>
                    </StackPanel>
                </Grid>
            </StackPanel>
        </Border>
    </DataTemplate>

    <Style x:Key="ListBoxWithClearScrollBar" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="#FF777777" />
        <Setter Property="BorderThickness" Value="1" />
        <!--<Setter Property="CornerRadius" Value="2" />-->
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Style.Resources>
            <!--Scrollbar Thumbs-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--ScrollBars-->
            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                            <GradientStop Color="#FFF5F5F5" Offset="0" />
                            <GradientStop Color="#FFEEEEEE" Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Width" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="{TemplateBinding Width}" Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.00001*" />
                                </Grid.RowDefinitions>

                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="8" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    
</ResourceDictionary>